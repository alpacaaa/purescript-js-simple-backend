{
  "Something":{
    "imports":[
      "Prim",
      "Something"
    ],
    "builtWith":"0.10.5",
    "exports":[
      "Left",
      "Right",
      "Nil",
      "Cons",
      "Nothing",
      "Just",
      "C",
      "Tagged",
      "Off",
      "On",
      "Tuple",
      "UnitC",
      "Monoid",
      "Semigroup",
      "append",
      "apply",
      "array",
      "bind",
      "boolean",
      "character",
      "constant",
      "empty",
      "getName",
      "identity",
      "intT",
      "integer",
      "just",
      "letIdentity",
      "mutualA",
      "mutualB",
      "named",
      "negate",
      "negativeOne",
      "nonEmpty",
      "not",
      "number",
      "numbers",
      "partial",
      "perform",
      "record",
      "right",
      "string",
      "switch",
      "triple",
      "tuple",
      "unit",
      "whereIdentity",
      "semigroupInt"
    ],
    "decls":[
      {
        "UnitC":[
          "Constructor",
          "UnitT",
          "UnitC",
          [

          ]
        ]
      },
      {
        "Tuple":[
          "Constructor",
          "Tuple",
          "Tuple",
          [
            "value0",
            "value1"
          ]
        ]
      },
      {
        "Off":[
          "Constructor",
          "Toggle",
          "Off",
          [

          ]
        ]
      },
      {
        "On":[
          "Constructor",
          "Toggle",
          "On",
          [

          ]
        ]
      },
      {
        "Tagged":[
          "Abs",
          "x",
          [
            "Var",
            "x"
          ]
        ]
      },
      {
        "C":[
          "Constructor",
          "T",
          "C",
          [
            "value0"
          ]
        ]
      },
      {
        "Nothing":[
          "Constructor",
          "Maybe",
          "Nothing",
          [

          ]
        ]
      },
      {
        "Just":[
          "Constructor",
          "Maybe",
          "Just",
          [
            "value0"
          ]
        ]
      },
      {
        "Nil":[
          "Constructor",
          "List",
          "Nil",
          [

          ]
        ]
      },
      {
        "Cons":[
          "Constructor",
          "List",
          "Cons",
          [
            "value0",
            "value1"
          ]
        ]
      },
      {
        "Left":[
          "Constructor",
          "Either",
          "Left",
          [
            "value0"
          ]
        ]
      },
      {
        "Right":[
          "Constructor",
          "Either",
          "Right",
          [
            "value0"
          ]
        ]
      },
      {
        "Semigroup":[
          "Abs",
          "append",
          [
            "Literal",
            [
              "ObjectLiteral",
              {
                "append":[
                  "Var",
                  "append"
                ]
              }
            ]
          ]
        ]
      },
      {
        "Monoid":[
          "Abs",
          "__superclass_Something.Semigroup_0",
          [
            "Abs",
            "empty",
            [
              "Literal",
              [
                "ObjectLiteral",
                {
                  "empty":[
                    "Var",
                    "empty"
                  ],
                  "__superclass_Something.Semigroup_0":[
                    "Var",
                    "__superclass_Something.Semigroup_0"
                  ]
                }
              ]
            ]
          ]
        ]
      },
      {
        "unit":[
          "Var",
          "Something.UnitC"
        ]
      },
      {
        "tuple":[
          "Abs",
          "x",
          [
            "Abs",
            "y",
            [
              "App",
              [
                "App",
                [
                  "Var",
                  "Something.Tuple"
                ],
                [
                  "Var",
                  "x"
                ]
              ],
              [
                "Var",
                "y"
              ]
            ]
          ]
        ]
      },
      {
        "switch":[
          "Abs",
          "x",
          [
            "Case",
            [
              [
                "Var",
                "x"
              ],
              [
                "Var",
                "x"
              ]
            ],
            [
              [
                [
                  [
                    "LiteralBinder",
                    [
                      "IntLiteral",
                      0
                    ]
                  ],
                  [
                    "LiteralBinder",
                    [
                      "IntLiteral",
                      0
                    ]
                  ]
                ],
                [
                  "Literal",
                  [
                    "IntLiteral",
                    0
                  ]
                ]
              ],
              [
                [
                  [
                    "LiteralBinder",
                    [
                      "IntLiteral",
                      1
                    ]
                  ],
                  [
                    "VarBinder",
                    "z"
                  ]
                ],
                [
                  "Var",
                  "z"
                ]
              ],
              [
                [
                  [
                    "VarBinder",
                    "y"
                  ],
                  [
                    "LiteralBinder",
                    [
                      "IntLiteral",
                      1
                    ]
                  ]
                ],
                [
                  "Var",
                  "y"
                ]
              ],
              [
                [
                  "NullBinder",
                  "NullBinder"
                ],
                [
                  "Var",
                  "x"
                ]
              ]
            ]
          ]
        ]
      },
      {
        "string":[
          "Literal",
          [
            "StringLiteral",
            "thran"
          ]
        ]
      },
      {
        "semigroupInt":[
          "App",
          [
            "Var",
            "Something.Semigroup"
          ],
          [
            "Abs",
            "v",
            [
              "Abs",
              "v1",
              [
                "Literal",
                [
                  "IntLiteral",
                  0
                ]
              ]
            ]
          ]
        ]
      },
      {
        "right":[
          "Abs",
          "x",
          [
            "App",
            [
              "Var",
              "Something.Right"
            ],
            [
              "Var",
              "x"
            ]
          ]
        ]
      },
      {
        "record":[
          "Literal",
          [
            "ObjectLiteral",
            {

            }
          ]
        ]
      },
      {
        "partial":[
          "Abs",
          "dictPartial",
          [
            "Abs",
            "v",
            [
              "Let",
              [
                {
                  "__unused":[
                    "Abs",
                    "dictPartial1",
                    [
                      "Abs",
                      "$6",
                      [
                        "Var",
                        "$6"
                      ]
                    ]
                  ]
                }
              ],
              [
                "App",
                [
                  "App",
                  [
                    "Var",
                    "__unused"
                  ],
                  [
                    "Var",
                    "dictPartial"
                  ]
                ],
                [
                  "Case",
                  [
                    [
                      "Var",
                      "v"
                    ]
                  ],
                  [
                    [
                      [
                        [
                          "LiteralBinder",
                          [
                            "IntLiteral",
                            0
                          ]
                        ]
                      ],
                      [
                        "Literal",
                        [
                          "IntLiteral",
                          0
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      },
      {
        "numbers":[
          "App",
          [
            "App",
            [
              "Var",
              "Something.Cons"
            ],
            [
              "Literal",
              [
                "IntLiteral",
                1
              ]
            ]
          ],
          [
            "App",
            [
              "App",
              [
                "Var",
                "Something.Cons"
              ],
              [
                "Literal",
                [
                  "IntLiteral",
                  2
                ]
              ]
            ],
            [
              "Var",
              "Something.Nil"
            ]
          ]
        ]
      },
      {
        "number":[
          "Literal",
          [
            "NumberLiteral",
            1.2
          ]
        ]
      },
      {
        "not":[
          "Abs",
          "x",
          [
            "Case",
            [
              [
                "Var",
                "x"
              ]
            ],
            [
              [
                [
                  [
                    "LiteralBinder",
                    [
                      "BooleanLiteral",
                      true
                    ]
                  ]
                ],
                [
                  "Literal",
                  [
                    "BooleanLiteral",
                    false
                  ]
                ]
              ],
              [
                [
                  [
                    "LiteralBinder",
                    [
                      "BooleanLiteral",
                      false
                    ]
                  ]
                ],
                [
                  "Literal",
                  [
                    "BooleanLiteral",
                    true
                  ]
                ]
              ]
            ]
          ]
        ]
      },
      {
        "nonEmpty":[
          "Literal",
          [
            "ObjectLiteral",
            {
              "name":[
                "Literal",
                [
                  "StringLiteral",
                  "thran"
                ]
              ]
            }
          ]
        ]
      },
      {
        "negate":[
          "Abs",
          "x",
          [
            "Var",
            "x"
          ]
        ]
      },
      {
        "negativeOne":[
          "App",
          [
            "Var",
            "Something.negate"
          ],
          [
            "Literal",
            [
              "IntLiteral",
              1
            ]
          ]
        ]
      },
      {
        "named":[
          "Abs",
          "x",
          [
            "Case",
            [
              [
                "Var",
                "x"
              ]
            ],
            [
              [
                [
                  [
                    "NamedBinder",
                    "y",
                    "NullBinder"
                  ]
                ],
                [
                  "Var",
                  "y"
                ]
              ]
            ]
          ]
        ]
      },
      {
        "mutualA":[
          "Abs",
          "x",
          [
            "App",
            [
              "Var",
              "Something.mutualB"
            ],
            [
              "Var",
              "x"
            ]
          ]
        ],
        "mutualB":[
          "Abs",
          "x",
          [
            "App",
            [
              "Var",
              "Something.mutualA"
            ],
            [
              "Var",
              "x"
            ]
          ]
        ]
      },
      {
        "just":[
          "Abs",
          "x",
          [
            "App",
            [
              "Var",
              "Something.Just"
            ],
            [
              "Var",
              "x"
            ]
          ]
        ]
      },
      {
        "integer":[
          "Literal",
          [
            "IntLiteral",
            7
          ]
        ]
      },
      {
        "intT":[
          "App",
          [
            "Var",
            "Something.C"
          ],
          [
            "Literal",
            [
              "IntLiteral",
              0
            ]
          ]
        ]
      },
      {
        "identity":[
          "Abs",
          "x",
          [
            "Var",
            "x"
          ]
        ]
      },
      {
        "letIdentity":[
          "Let",
          [
            {
              "g":[
                "Var",
                "Something.identity"
              ]
            },
            {
              "f":[
                "Var",
                "Something.identity"
              ]
            }
          ],
          [
            "App",
            [
              "Var",
              "g"
            ],
            [
              "Var",
              "f"
            ]
          ]
        ]
      },
      {
        "whereIdentity":[
          "Let",
          [
            {
              "g":[
                "Var",
                "Something.identity"
              ]
            },
            {
              "f":[
                "Var",
                "Something.identity"
              ]
            }
          ],
          [
            "App",
            [
              "Var",
              "g"
            ],
            [
              "Var",
              "f"
            ]
          ]
        ]
      },
      {
        "getName":[
          "Abs",
          "person",
          [
            "Accessor",
            "name",
            [
              "Var",
              "person"
            ]
          ]
        ]
      },
      {
        "empty":[
          "Abs",
          "dict",
          [
            "Accessor",
            "empty",
            [
              "Var",
              "dict"
            ]
          ]
        ]
      },
      {
        "constant":[
          "Abs",
          "x",
          [
            "Abs",
            "y",
            [
              "Var",
              "x"
            ]
          ]
        ]
      },
      {
        "character":[
          "Literal",
          [
            "CharLiteral",
            "t"
          ]
        ]
      },
      {
        "boolean":[
          "Literal",
          [
            "BooleanLiteral",
            true
          ]
        ]
      },
      {
        "bind":[
          "Abs",
          "x",
          [
            "Abs",
            "f",
            [
              "App",
              [
                "Var",
                "f"
              ],
              [
                "Var",
                "x"
              ]
            ]
          ]
        ]
      },
      {
        "perform":[
          "Abs",
          "effect",
          [
            "Abs",
            "query",
            [
              "App",
              [
                "App",
                [
                  "Var",
                  "Something.bind"
                ],
                [
                  "Var",
                  "effect"
                ]
              ],
              [
                "Abs",
                "__unused",
                [
                  "App",
                  [
                    "App",
                    [
                      "Var",
                      "Something.bind"
                    ],
                    [
                      "Var",
                      "query"
                    ]
                  ],
                  [
                    "Abs",
                    "v",
                    [
                      "Case",
                      [
                        [
                          "Var",
                          "v"
                        ]
                      ],
                      [
                        [
                          [
                            [
                              "VarBinder",
                              "result"
                            ]
                          ],
                          [
                            "App",
                            [
                              "App",
                              [
                                "Var",
                                "Something.bind"
                              ],
                              [
                                "Var",
                                "effect"
                              ]
                            ],
                            [
                              "Abs",
                              "__unused",
                              [
                                "App",
                                [
                                  "App",
                                  [
                                    "Var",
                                    "Something.bind"
                                  ],
                                  [
                                    "Var",
                                    "query"
                                  ]
                                ],
                                [
                                  "Abs",
                                  "v1",
                                  [
                                    "Case",
                                    [
                                      [
                                        "Var",
                                        "v1"
                                      ]
                                    ],
                                    [
                                      [
                                        [
                                          "NullBinder"
                                        ],
                                        [
                                          "Var",
                                          "result"
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      },
      {
        "array":[
          "Literal",
          [
            "ArrayLiteral",
            [
              [
                "Literal",
                [
                  "IntLiteral",
                  1
                ]
              ],
              [
                "Literal",
                [
                  "IntLiteral",
                  2
                ]
              ],
              [
                "Literal",
                [
                  "IntLiteral",
                  3
                ]
              ]
            ]
          ]
        ]
      },
      {
        "apply":[
          "Abs",
          "f",
          [
            "Abs",
            "x",
            [
              "App",
              [
                "Var",
                "f"
              ],
              [
                "Var",
                "x"
              ]
            ]
          ]
        ]
      },
      {
        "append":[
          "Abs",
          "dict",
          [
            "Accessor",
            "append",
            [
              "Var",
              "dict"
            ]
          ]
        ]
      },
      {
        "triple":[
          "Abs",
          "dictSemigroup",
          [
            "Abs",
            "x",
            [
              "App",
              [
                "App",
                [
                  "App",
                  [
                    "Var",
                    "Something.append"
                  ],
                  [
                    "Var",
                    "dictSemigroup"
                  ]
                ],
                [
                  "App",
                  [
                    "App",
                    [
                      "App",
                      [
                        "Var",
                        "Something.append"
                      ],
                      [
                        "Var",
                        "dictSemigroup"
                      ]
                    ],
                    [
                      "Var",
                      "x"
                    ]
                  ],
                  [
                    "Var",
                    "x"
                  ]
                ]
              ],
              [
                "Var",
                "x"
              ]
            ]
          ]
        ]
      }
    ],
    "foreign":[

    ]
  }
}
